---
title: Setting up multi-user environment
layout: doc
---
<h1>Setting up multi-user environment</h1>
<p>
  OS.js supports <i>multiple user environments</i> and <i>authentication</i>.
</p>

<h2>Included handlers</h2>

<p>
  The <i>Handler</i> is what handles authentication and other sets of user functions. You can <a href="/doc/tutorials/create-handler.html">create your own</a>, or use one of the included ones:
</p>

<h3>Demo (demo)</h3>
<p>
  The default handler. Does not have any authentication and the user data lives entirely within the browser (except VFS files). This means that if a user clears the browser cache, all data is lost.
</p>

<h3>Mysql (mysql)</h3>
<p>
  Handles authentication via mysql. This is more of an example/template, but can be used out of the box for a simple multi-user environment.
</p>

<h3>PAM (pam)</h3>
<p>
  PAM is the default athentication for many Linux and BSD systems. OS.js supports logging in this way and store the userdata in users home-directory (under .osjs).
</p>

<h2>Choosing a handler</h2>

<p>
  Simply change the <a href="/doc/manuals/man-configuration.html">configuration</a> entry named "handler"  (src/conf/000-base.json) and run:
</p>
<pre class="code">
grunt config

# if you use 'dist'
grunt dist
</pre>
